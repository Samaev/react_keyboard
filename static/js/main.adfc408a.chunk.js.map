{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","msg","document","addEventListener","event","key","setState","this","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,uBAFT,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,EAAMC,KACR,EAAKC,SAAS,CAAEL,IAAI,2BAAD,OAA6BG,EAAMC,YAR9D,kCAaE,WAAwB,IAAD,OACrBH,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,EAAMC,KACR,EAAKC,SAAS,CAAEL,IAAI,2BAAD,OAA6BG,EAAMC,YAhB9D,oBAqBE,WACE,IAAQJ,EAAQM,KAAKP,MAAbC,IAER,OACE,gCACE,6CACA,6BAAKA,WA3Bb,GAAyBO,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.adfc408a.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  msg: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    msg: 'Nothing pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      if (event.key) {\n        this.setState({ msg: `The last pressed key is ${event.key}` });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      if (event.key) {\n        this.setState({ msg: `The last pressed key is ${event.key}` });\n      }\n    });\n  }\n\n  render(): ReactNode {\n    const { msg } = this.state;\n\n    return (\n      <div>\n        <h1>Checking...</h1>\n        <h2>{msg}</h2>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","msg","handlePressKey","event","key","setState","document","addEventListener","this","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,uBAFT,EAaEC,eAAiB,SAACC,GACZA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,IAAI,2BAAD,OAA6BE,EAAMC,QAf5D,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAmBE,WACE,IAAQD,EAAQO,KAAKR,MAAbC,IAER,OACE,gCACE,6CACA,6BAAKA,WAzBb,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.8b39b343.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  msg: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    msg: 'Nothing pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePressKey);\n  }\n\n  handlePressKey = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ msg: `The last pressed key is ${event.key}` });\n    }\n  };\n\n  render(): ReactNode {\n    const { msg } = this.state;\n\n    return (\n      <div>\n        <h1>Checking...</h1>\n        <h2>{msg}</h2>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}